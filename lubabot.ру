import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from flask import Flask, request

# Логирование
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)

# Flask-приложение для webhook
app = Flask(__name__)
bot_app = None

@app.route('/webhook', methods=['POST'])
def webhook():
    """Обработка сообщений от Telegram через webhook."""
    if bot_app:
        update = Update.de_json(request.get_json(), bot_app.bot)
        bot_app.process_update(update)
    return "OK", 200

# Команда /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text("Привет! Я бот, готов к работе.")

# Команда /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(
        "Список доступных команд:\n"
        "/start - начать\n"
        "/help - помощь"
    )

# Основной блок запуска
if __name__ == "__main__":
    # Создаем Telegram-приложение
    application = ApplicationBuilder().token("ВАШ_ТОКЕН").build()

    # Регистрируем команды
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))

    # Настраиваем webhook
    application.bot.set_webhook("https://ВАШЕ-ДОМЕННОЕ-ИМЯ/webhook")

    # Запускаем Flask-приложение
    bot_app = application
    app.run(host="0.0.0.0", port=5000)
