import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from flask import Flask
import threading

# Логирование для бота
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)

# Создаем Flask-приложение для Health Check
app = Flask(__name__)

@app.route('/healthz', methods=['GET'])
def health_check():
    return "OK", 200

# Функция для запуска Flask-сервера
def run_flask():
    app.run(host='0.0.0.0', port=5000)

# Команда /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text("Привет! Я бот, готов к работе.")

# Команда /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(
        "Список доступных команд:\n"
        "/start - начать\n"
        "/help - помощь"
    )

# Основной блок запуска
if __name__ == "__main__":
    # Запускаем Flask-сервер в параллельном потоке
    threading.Thread(target=run_flask, daemon=True).start()

    # Создаем приложение Telegram Bot
    application = ApplicationBuilder().token("ВАШ_ТОКЕН").build()

    # Регистрируем команды
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))

    # Запуск бота
    application.run_polling()
