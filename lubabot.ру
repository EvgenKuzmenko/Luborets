import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from flask import Flask, request
import asyncio

# Flask-приложение для вебхука
app = Flask(__name__)

# Включение логирования
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# Функция обработки команды /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text("Привет! Я бот, готов к работе.")

# Функция обработки команды /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text("Список доступных команд:\n/start - начать\n/help - помощь")

# Основной блок
if __name__ == "__main__":
    TOKEN = "Ваш_токен"  # Вставьте токен вашего бота
    DOMAIN = "https://ваш_домен"  # Укажите ваш домен или IP-адрес

    # Инициализация приложения
    application = ApplicationBuilder().token(TOKEN).build()

    # Регистрация команд
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))

    # Установка вебхука
    async def set_webhook():
        url = f"{DOMAIN}/webhook"
        await application.bot.set_webhook(url=url)
        logging.info(f"Webhook установлен на {url}")

    @app.route('/webhook', methods=['POST'])
    def webhook():
        data = request.get_json()
        application.update_queue.put_nowait(Update.de_json(data, application.bot))
        return "OK", 200

    loop = asyncio.get_event_loop()
    loop.run_until_complete(set_webhook())
    app.run(host="0.0.0.0", port=5000)
