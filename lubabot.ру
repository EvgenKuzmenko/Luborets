from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
from docx import Document

# Словарь для хранения данных пользователя
user_data = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "Добро пожаловать! Я помогу вам создать заявление.\n"
        "Пожалуйста, введите название суда:"
    )
    user_data[update.message.chat_id] = {"step": 1}

async def handle_data(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.message.chat_id
    text = update.message.text

    # Проверяем, какой шаг заполнения
    if chat_id in user_data:
        step = user_data[chat_id].get("step", 1)

        if step == 1:
            user_data[chat_id]["court"] = text
            user_data[chat_id]["step"] = 2
            await update.message.reply_text("Введите ФИО:")
        elif step == 2:
            user_data[chat_id]["name"] = text
            user_data[chat_id]["step"] = 3
            await update.message.reply_text("Введите процессуальное положение:")
        elif step == 3:
            user_data[chat_id]["role"] = text
            user_data[chat_id]["step"] = 4
            await update.message.reply_text("Введите адрес проживания:")
        elif step == 4:
            user_data[chat_id]["address"] = text
            user_data[chat_id]["step"] = 5
            await update.message.reply_text("Введите номер телефона:")
        elif step == 5:
            user_data[chat_id]["phone"] = text
            user_data[chat_id]["step"] = 6
            await update.message.reply_text("Введите номер дела:")
        elif step == 6:
            user_data[chat_id]["case_number"] = text
            user_data[chat_id]["step"] = 7
            await update.message.reply_text("Введите дату (например, 08.01.2025):")
        elif step == 7:
            user_data[chat_id]["date"] = text

            # Создаем документ Word
            document = Document()
            document.add_heading('Заявление об ознакомлении с делом/материалом', level=1)

            court = user_data[chat_id]["court"]
            name = user_data[chat_id]["name"]
            role = user_data[chat_id]["role"]
            address = user_data[chat_id]["address"]
            phone = user_data[chat_id]["phone"]
            case_number = user_data[chat_id]["case_number"]
            date = user_data[chat_id]["date"]

            document.add_paragraph(f"Председателю суда\n{court}\n\nот {name}, {role}\nпроживающего по адресу: {address}\nномер контактного телефона: {phone}")
            document.add_paragraph("\nЗаявление об ознакомлении с делом/материалом")
            document.add_paragraph(f"1. Прошу предоставить мне возможность ознакомления с делом/материалом: {case_number}")
            document.add_paragraph(f"\nДата: {date}")
            document.add_paragraph(f"\nПодпись: {name}")

            # Сохраняем файл
            file_path = f"{chat_id}_zayavlenie.docx"
            document.save(file_path)

            # Отправляем файл
            with open(file_path, 'rb') as file:
                await update.message.reply_document(file, filename="zayavlenie.docx")

            # Очищаем данные пользователя
            user_data.pop(chat_id)
        else:
            await update.message.reply_text("Ошибка! Начните с команды /start.")
    else:
        await update.message.reply_text("Пожалуйста, начните с команды /start.")

# Главная функция
if __name__ == "__main__":
    app = ApplicationBuilder().token("7766596531:AAEll9NJOEq2SuiPBaYxM_REfdeuX4D08qk").build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_data))

    print("Бот запущен!")
    app.run_polling()